trigger:
- feature-abc2

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build
    jobs:
    - job: dotnetBuild
      steps:
      - task: UseDotNet@2
        inputs:
          version: '3.1.x'

      - task: DotNetCoreCLI@2
        inputs:
          command: 'build'
          publishWebProjects: true
          arguments: '-c Debug -p:UseAppHost=false'
          workingDirectory: '$(Build.SourcesDirectory)/app'
          
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: '$(Build.SourcesDirectory)/app/bin/Debug/netcoreapp3.1'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/upload.zip'
          replaceExistingArchive: true
          verbose: true 
      - task: CmdLine@2
        inputs:
          script: 'ls -l $(Build.ArtifactStagingDirectory)'
          
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/upload.zip'
          ArtifactName: 'upload'

  - stage: sast_sandbox_scan
    jobs:
    - job: sast_sandbox_scan
      steps:
      - task: DownloadBuildArtifacts@1
        inputs:
          artifactName: upload
      
      - task: Veracode@3
        inputs:
          ConnectionDetailsSelection: 'Credentials'
          apiId: '$(VERACODE_ID)'
          apiKey: '$(VERACODE_KEY)'
          veracodeAppProfile: '$(system.teamProject)'
          version: '$(build.buildNumber)'
          filepath: '$(Build.ArtifactStagingDirectory)/upload/upload.zip'
          sandboxName: '$(Build.SourceBranchName)'
          createSandBox: true
          optargs: '-deleteincompletescan 2  -teams $(VERACODE_TEAMS) -criticality High'
          createProfile: true
      displayName: Veracode SAST - Sandbox Branch Scan
  
  - stage: sast_policy_scan
    jobs:
    - job: sast_policy_scan
      steps:

      - task: DownloadBuildArtifacts@1
        inputs:
          artifactName: upload
      
      - task: Veracode@3
        inputs:
          ConnectionDetailsSelection: 'Credentials'
          apiId: '$(VERACODE_ID)'
          apiKey: '$(VERACODE_KEY)'
          veracodeAppProfile: '$(system.teamProject)'
          version: '$(build.buildNumber)'
          filepath: '$(Build.ArtifactStagingDirectory)/upload/upload.zip'
          optargs: '-deleteincompletescan 2  -teams $(VERACODE_TEAMS) -criticality High'
          createProfile: true
      displayName: Veracode SAST - Policy Scan

  - stage: sca_agent_based
    jobs:
      - job: veracode_sca
        steps:

        - task: CmdLine@2
          inputs:
            script: |
              export SRCCLR_API_TOKEN=$(SRCCLR_API_TOKEN)
              export SRCCLR_SCM_URI=$(Build.Repository.Uri)
              export SRCCLR_SCM_REF=$(Build.SourceBranchName)
              export SRCCLR_SCM_REF_TYPE="branch"
              export SRCCLR_SCM_REV=$(Build.SourceVersion)
              curl -sSL https://download.sourceclear.com/ci.sh | sh -s -- scan app  --update-advisor --uri-as-name || true
        displayName: 'Veracode SCA - Agent-Based Scan'

  - stage: veracode_sast_pipeline_scan
    jobs:
    - job: PipelineScan
      steps:
      
      - task: DownloadBuildArtifacts@1
        inputs:
          artifactName: upload
        
      - task: CmdLine@2
        inputs:
          script: |
            curl -sSO https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
            unzip -o pipeline-scan-LATEST.zip
            java -jar pipeline-scan.jar -vid $(VERACODE_ID) -vkey $(VERACODE_KEY) -f $(Build.ArtifactStagingDirectory)/upload/upload.zip --include "app.Views.dll" --project_name "verademo-dotnetcore" -r $(Build.SourceBranch) -aid $(VERACODE_PROJECT_ID) -ds "Development" 
        displayName: Veracode SAST - Pipeline Scan